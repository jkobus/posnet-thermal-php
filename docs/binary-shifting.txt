echo 'bit='.(($word>>$bitNumber)&1);

It works like this:

$word contains some bits. Let's say 11010001101.

The >operator shifts those bits to the right. So, to make it easy
to check the fourth bit we'll get it into the right-most position by
shifting the whole thing right three bits. This leaves you with:

11010001101 >3 = 00011010001

Since the number one has a 1 bit in the right-most position we just
AND the two numbers together. The result of an AND will be 1 where
both numbers have a 1 and will be 0 otherwise. So, AND'ing the two
together gives you this:

00011010001
00000000001
-----------
00000000001

Since that's not zero the first bit (which was originally the fourth
bit) must have been set.

We can try the same example and look at the second bit instead:

11010001101 >1 = 01101000110

then AND it with 1:

01101000110
00000000001
-----------
00000000000

which is zero. So the second bit wasn't set.